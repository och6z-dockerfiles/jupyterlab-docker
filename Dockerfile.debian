ARG IMAGE_VERSION

FROM debian:${IMAGE_VERSION}

ENV DEBIAN_FRONTEND noninteractive

RUN apt-get update \
    && apt-get upgrade -y --no-install-recommends \
    && apt-get install -y --no-install-recommends \
    python3-pip \
    python3-dev \
    && apt-get purge -y && apt-get autoremove -y && apt-get autoclean -y \
    && rm -rf /var/lib/apt/lists/*

RUN pip install --upgrade --no-cache-dir \
    pip \
    setuptools \
    wheel \
    eggs

COPY . /root/.jupyter/lab/

RUN pip install --upgrade --no-cache-dir \
    jupyterlab \
    --requirement /root/.jupyter/lab/requirements.txt \
    && rm --force /root/.jupyter/lab/requirements.txt \
    && apt-get purge -y && apt-get autoremove -y && apt-get autoclean -y \
    && rm -rf /var/lib/apt/lists/*

ARG GID
ARG GID_NAME
ARG UID
ARG UID_NAME

RUN addgroup --gid ${GID} ${UID_NAME} \
    && adduser --uid ${UID} \
    --ingroup ${GID_NAME} \
    --home /home/${UID_NAME} \
    --shell /bin/bash \
    --disabled-password \
    --gecos "" ${UID_NAME}

WORKDIR /home/${UID_NAME}/jupyter-lab

EXPOSE 8888

ENTRYPOINT ["jupyter-lab"]

CMD ["--allow-root", "--ip=0.0.0.0", "--no-browser"]

#docker builder build --no-cache --build-arg IMAGE_VERSION=unstable-slim --build-arg GID=$(id -g) --build-arg GID_NAME=$(id -gn) --build-arg UID=$(id -u) --build-arg UID_NAME=$(id -un) --file Dockerfile.debian --tag image-name:version .
#docker volume create --driver local --name jupyter-lab
#docker container run --interactive --tty --mount source=jupyter-lab,target=/home/$(id -un)/jupyter-lab --publish 8888:8888 --name container-name image-name:version
